version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  audio-receiver:
    build: .
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "9090:9090"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      VOICE_RESPONSE_CHANNEL: chip.voice.responses
      HEALTH_CHANNEL: chip.services.health
      AUDIO_OUTPUT_TYPE: file
      SAVE_TO_FILE: "true"
      METRICS_PORT: 9090
      METRICS_ENABLED: "true"
      LOG_LEVEL: info
      LOG_FORMAT: json
    volumes:
      - ./audio-output:/app/audio-output
    restart: unless-stopped

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - audio-receiver

volumes:
  redis-data:
  prometheus-data: